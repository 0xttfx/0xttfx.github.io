[{"content":"","date":"23 January 2024","permalink":"/","section":"","summary":"","title":""},{"content":"","date":"23 January 2024","permalink":"/posts/","section":"","summary":"","title":""},{"content":"","date":"23 January 2024","permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux"},{"content":"Aqui temos uma abordagem simples de identifica√ß√£o de causa raiz para troubleshooting em ambientes Microsoft Windows Server.\nComo exemplo estou usando um problema, que a equipe Microsoft de uma multinacional, enfrentou com um produto de mercado que estava causando um alto uso de Non-Paged Pool Memory(memory leak). E que causou, durante uma rotina de madrugada, o travamento de +500 servidores\u0026hellip;\neu era de uma equipe multidiciplinar. respons√°vel por virtualiza√ß√£o, storage, backup, Unix e Linux e acabei me envolvendo pois as equipes de Seguran√ßa e Microsoft estavam apenas trocando acusa√ß√µes e ainda n√£o identificado a causa raiz\u0026hellip; Problema # Verificado que o non-paged pool est√° com tamanho anormal\nConforme documenta√ß√£o da Microsoft, o Non-paged pool, pode ocupar at√© 75% da mem√≥ria f√≠sica.\nPor√©m n√£o deve ser considerado como \u0026ldquo;normal\u0026rdquo; o grande uso da mesma, principalmente sem uma investiga√ß√£o etc\u0026hellip; O Non-paged Pool s√£o dados na RAM do computador usados ‚Äã‚Äãpelo kernel e pelos drivers do sistema operacional.\nNon-paged pool nunca √© enviado para o disco ( Page Cache)! Sempre ficar√° armazenado na mem√≥ria f√≠sica. Conforme a minha viv√™ncia, leak de mem√≥ria, √© quando um programa que armazena dados no pool de mem√≥ria n√£o pagin√°vel do sistema faz \u0026ldquo;merda\u0026rdquo;. Simples assim!\nInvestiga√ß√£o # Identificando o que est√° utilizando os Pools Memory no servidor Wind√£o.\nPara o troubleshooting de Pool Memory √© usada a ferramenta PoolMon que √© um monitor que exibe dados que o Wind√£o coleta sobre aloca√ß√µes de mem√≥ria dos pools de kernel paginados e n√£o paginados do sistema\u0026hellip; Os dados s√£o agrupados por marca de aloca√ß√£o de pool que evidencia as tags que identificam o software etc\u0026hellip; Chega de conversa! Para tanto abra o command ou power shell e navegue at√© a pasta em que o execut√°vel \u0026ldquo;poolmon.exe\u0026rdquo;¬†est√° localizado:\nPode-se executar a ferramenta para que seja gerado um log: C:\\Temp\\Windows Kits\\10\\Tools\\x64\u0026gt; poolmon -b -n C:\\Temp\\log_poolmon.txt Ou imprimir na STDOUT: C:\\Temp\\Windows Kits\\10\\Tools\\x64\u0026gt; poolmon -b ‚Äú-b‚Äù executa o aplicativo e organiza os processos em ordem de consumo. Aqui conseguimos ver que no topo da lista, temos o processo com maior consumo de RAM \u0026ldquo;5053046496\u0026rdquo; Bytes e sua Tag √© \u0026ldquo;NFeS\u0026rdquo;. a TAG √© um valor √∫nico e que √© dado pela fabricante do driver. 5053046496¬†/ 1024 = 4.934.615,... / 1024 = 4.818,... / 1024 = 4,7...GB Com a tag em m√£os, deve-se usar a ferramenta findstr que procura por cadeia de caracteres! Dessa forma vamos tentar localizar o arquivo que possui a tag em seu conte√∫do\u0026hellip;\nVamos em seguida acessar o diret√≥rio de drives no Windows: path: c:\\windows\\system32\\drivers C:\\\u0026gt; cd c:\\windows\\system32\\drivers E executar a tool para a busca da tag C:\\Windows\\System32\\drivers\\\u0026gt; findstr /m /l /s NFeS *.sys C:\\Windows\\System32\\drivers\\mfeavfk.sys /l: pesquisa por caracteres literais /m: lista apenas resultados correspondentes /s: pesquisa recursiva Bingo\u0026hellip;.\\o/!\nIdentificamos com sucesso um aquivo que possui a tag: \u0026ldquo;mfeavfk.sys\u0026rdquo;! Agora para tentar identificar o programa que est√° usando esse driver.\nVamos usar a ferramenta sigcheck¬†que mostra metadados como, por exemplo: o n√∫mero da vers√£o do arquivo, carimbo de data/hora e detalhes da assinatura digital etc\u0026hellip; C:\\\u0026gt; sigcheck c:\\Windows\\System32\\drivers\\mfeavfk.sys Assim identificamos que o propriet√°rio √© o Anti-v√≠rus McAfee.\nSobre o Arquivo e Driver Identificado # Dados do Host afetado\nHost: Windows Server Vers√£o: Windows Server Enterprise 2012 R2 x64 Vers√µes do produto MCAfee:\nMcAfee Agent - version: 5.6.2.209 McAfee Endpoint Security Plataform - version: 10.6.11910 McAfee Endpoint Security Threat Prevention - version: 10.6.11910 Informa√ß√µes relevantes # Dos processos iniciados e drivers utilizados pelo Virus Scan Enterprise no Wind√£o:\nO driver mfeavfk:\n√© um filtro para verifica√ß√£o de arquivos de sistema e para manter um cache desses arquivos aferidos. O arquivo mfeavfk.sys:\n√© um componente de software do SYSCORE da McAfee que opera como Anti-Virus Filter Link para os produtos de seguran√ßa do McAfee. O VSE( VirusScan Enterprise) atrav√©s do driver mfeavfk que opera a n√≠vel de kernel, juntamente com o Microsoft Filter Manager, consegue verificar o v√≠rus em tempo real e de forma aut√¥noma quando arquivos s√£o abertos ou fechados. Basicamente √© assim que a McAfee identifica um v√≠rus manipulando arquivos etc\u0026hellip; MFEAVFK √© um acr√¥nimo para = McAfee For Enterprise Anti-Virus File Link Filter Driver Caracter√≠sticas\nMfeavfk.sys n√£o √© essencial para SO e por n√£o ser nativo do sistema causa relativamente poucos problemas. Mfeavfk.sys est√° localizado na pasta C:\\Windows\\System32\\drivers O tamanho do arquivo no Wind√£o tem em m√©dia 91.672 bytes. O driver pode ser iniciado ou parado quando feito de forma can√¥nica. O programa n√£o est√° vis√≠vel no task manager. √â assinado pela Verisign. N√£o h√° descri√ß√£o detalhada do servi√ßo. mfeavfk.sys parece ser um arquivo compactado. Portanto, a classifica√ß√£o de seguran√ßa t√©cnica √© 0% perigosa; no entanto: ao pesquisar reviews da comunidade a quantidade de problemas relacionados s√£o incont√°veis\u0026hellip; :( Pesquisando na documenta√ß√£o t√©cnica do produto, √© informado pelo fabricante, que programas de backup e criptografia tamb√©m usam o mesmo mecanismo:\nPor isso, conflitos e at√© mesmo corrompimentos de arquivos, podem ocorrer. At√© mesmo quando um v√≠rus, que possui mecanismo de prote√ß√£o contra o driver \u0026ldquo;mfeavfk\u0026rdquo;, pode gerar problemas cr√≠ticos ao tentar matar o processo que faz uso do driver etc\u0026hellip; Continuando com a pesquisa, mas agora, tentando cruzar ocorr√™ncias do driver \u0026ldquo;mfeavfk.sys\u0026rdquo; e leaks de \u0026ldquo;Non-Paged Pool\u0026rdquo; na base de conhecimento McAfee e Internet:\nO primeiro matching foi certeiro! Encontrei diversos casos conhecidos pela McAfee do problema que estamos enfrentando e justamente com a mesma vers√£o de SO e Anti-V√≠rus üòâ Segue link onde o assunto √© extensivamente tratado entre clientes e suporte McAfee Link original est√° quebrado! Egra√ßado como as fabricantes desaparecem com alguns dados \u0026hellip; Mas a WayBackMachine salvou uma c√≥pia para a posteridade üòâ Logo em seguida, repassei essa investiga√ß√£o para as equipes de SegInfo e Microfofy para continuidade do troubleshooting\u0026hellip;\nRefer√™ncias\nhttps://kc.mcafee.com/corporate/index?page=content\u0026id=KB65784 https://www.file.net/process/mfeavfk.sys.html https://support.microsoft.com/pt-br/help/177415/how-to-use-memory-pool-monitor-poolmon-exe-to-troubleshoot-kernel-mode https://developer.microsoft.com/pt-br/windows/hardware https://docs.microsoft.com/en-us/sysinternals/downloads/sigcheck https://community.mcafee.com/t5/Endpoint-Security-ENS/Nonpaged-pool-memory-leak-mfeavfk-sys-on-multiple-windows-server/td-p/617169 https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/filter-manager-concepts\n","date":"23 January 2024","permalink":"/posts/rtfmaleatoriedadesparasysadmin-windowsservertroubleshooting/","section":"","summary":"Aqui temos uma abordagem simples de identifica√ß√£o de causa raiz para troubleshooting em ambientes Microsoft Windows Server.","title":"RTFM \u0026 Aleatoriedades para SysAdmin - Windows Server Troubleshooting"},{"content":"","date":"23 January 2024","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"OSCP Stapling √© o servidor Web (e n√£o o navegador) obtendo resposta OCSP com status do certificado armazenando-o em cache, e esses dados s√£o inclu√≠dos nas respostas HTTPS junto com o certificado\u0026hellip;\nO OCSP¬†-¬†Online Certificate Status Protocol, descrita na RFC 2560, √© um protocolo √∫til para determinar o status de um certificado digital X.509 RFC5280 sem exigir CRL - Certificate Revocation Lists¬†descrita na RFC 2560 ou como complemento, pois fornece informa√ß√µes oportunas sobre o status de revoga√ß√£o de um certificado ( RFC2459 Se√ß√£o 3.3) que s√£o utilizados por exemplo por transfer√™ncias de fundos de alto valor ou grandes negocia√ß√µes de a√ß√µes.\nO cliente OCSP emite uma solicita√ß√£o de status para um OCSP responder e suspende a aceita√ß√£o do certificado em quest√£o at√© que o responder forne√ßa uma resposta.\nUma OCSP request cont√©m os seguintes dados\nvers√£o do protocolo requisi√ß√£o de servi√ßo identificador do certificado de destino extens√µes opcionais que PODEM ser processadas pelo OCSP Responder $ openssl s_client -status -connect 0xttfx.github.io:443 CONNECTED(00000003) depth=2 C = US, O = DigiCert Inc, OU = www.digicert.com, CN = DigiCert Global Root CA verify return:1 depth=1 C = US, O = DigiCert Inc, CN = DigiCert TLS RSA SHA256 2020 CA1 verify return:1 depth=0 C = US, ST = California, L = San Francisco, O = \u0026#34;GitHub, Inc.\u0026#34;, CN = *.github.io verify return:1 OCSP response: ====================================== OCSP Response Data: OCSP Response Status: successful (0x0) Response Type: Basic OCSP Response Version: 1 (0x0) Responder Id: B76BA2EAA8AA848C79EAB4DA0F98B2C59576B9F4 Produced At: Jan 11 12:13:07 2024 GMT Responses: Certificate ID: Hash Algorithm: sha1 Issuer Name Hash: E4E395A229D3D4C1C31FF0980C0B4EC0098AABD8 Issuer Key Hash: B76BA2EAA8AA848C79EAB4DA0F98B2C59576B9F4 Serial Number: 044D72D77CDDA702DD5A67F2A23BBDD9 Cert Status: good This Update: Jan 11 11:57:01 2024 GMT Next Update: Jan 18 10:57:01 2024 GMT Signature Algorithm: sha256WithRSAEncryption Signature Value: 15:e9:8c:5a:f3:19:e5:22:9a:a1:63:7c:c6:f1:fd:18:34:f3: ea:20:2b:8c:93:63:50:29:17:99:a4:45:72:77:6b:56:8f:68: f4:78:2b:b6:b2:9düá©üá™09:ac:1f:df:e4:fb:7d:03:9e:7b:aa: 77:ca:58:bf:4b:0a:2d:08:08:ff:ed:7a:49:03:3c:87:08:08: df:1b:be:bc:62:5a:42:fc:32:be:bb:46:7e:1b:ac:6d:a1:e8: f8:38:da:7d:bc:dd:e4:bb:1b:09:ce:e5:1e:4a:97:92:01:f4: 4b:ac:2b:d0:2c:5b:14:d2:29:26:2b:a7:9d:a7:10:93:22:cc: f4:b8:11:66:a4:34:5e:35:c3:2e:0d:e7:38:0c:ae:c1:15:2f: 32:f3:73:59:fb:9c:9c:6d:24:63:e5:7d:54:24:60:ed:a6:bc: 6a:a1:95:49:f1:fc:29:bf:1a:92:9d:a4:a0:0d:e3:df:fd:79: 76:21:76:c1:cfüíø8e:fa:3d:89:d9:1f:be:39:1a:44:5a:1b: 89:c1:ff:27:ec:37:f2:8b:ae:b2:e7:08:dd:ee:ca:c0:28:ca: 9a:5b:a9:fe:df:fe:9c:94:dd:fb:1f:44:b2:6b:b3:6e:ac:c3: 24:ef:1a:63:e7:3b:dd:1e:6f:29:21:a3:c0:a7:9e:c3:6a:6a: fd:a8:e1:21 ====================================== --- Certificate chain 0 s:C = US, ST = California, L = San Francisco, O = \u0026#34;GitHub, Inc.\u0026#34;, CN = *.github.io i:C = US, O = DigiCert Inc, CN = DigiCert TLS RSA SHA256 2020 CA1 a:PKEY: rsaEncryption, 2048 (bit); sigalg: RSA-SHA256 v:NotBefore: Feb 21 00:00:00 2023 GMT; NotAfter: Mar 20 23:59:59 2024 GMT 1 s:C = US, O = DigiCert Inc, CN = DigiCert TLS RSA SHA256 2020 CA1 i:C = US, O = DigiCert Inc, OU = www.digicert.com, CN = DigiCert Global Root CA a:PKEY: rsaEncryption, 2048 (bit); sigalg: RSA-SHA256 v:NotBefore: Apr 14 00:00:00 2021 GMT; NotAfter: Apr 13 23:59:59 2031 GMT --- Server certificate -----BEGIN CERTIFICATE----- MIIHEjCCBfqgAwIBAgIQBE1y13zdpwLdWmfyoju92TANBgkqhkiG9w0BAQsFADBP MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMSkwJwYDVQQDEyBE aWdpQ2VydCBUTFMgUlNBIFNIQTI1NiAyMDIwIENBMTAeFw0yMzAyMjEwMDAwMDBa Fw0yNDAzMjAyMzU5NTlaMGcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9y bmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2NvMRUwEwYDVQQKEwxHaXRIdWIsIElu Yy4xFDASBgNVBAMMCyouZ2l0aHViLmlvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A MIIBCgKCAQEAuLBgDhov8bGGS2TsEZ+meb7oh/GIxbRJmxC7yq/qr75UDHhDf8p7 TkVbCyQp8bsj/Bmkx2xwSXZT0wkjZbJIe7Ycqgca4nka+Xpe5xb4pkrVOaPiDfdX 7+34CHZbUtqL0OYebi/5D5lLalLKNOGkySAz05foenfFAxAmQYJhR6KvxFY/dqI4 y7JwrnJ6Q8F+J6Ne1uP256UwcL0qlid6e/tA0ld3ryMSJ0I6xgtqjL26Le4/nxXu YlekppVQr0OwrHa44Q7Z/1bsdFCGtR+WLNGVBeW3BWeTTp7yWjgfp49DWt48V9pI elDGiDgVyJcsLOz4OQk2vRmNA1ZBZgck4wIDAQABo4ID0DCCA8wwHwYDVR0jBBgw FoAUt2ui6qiqhIx56rTaD5iyxZV2ufQwHQYDVR0OBBYEFI0CHHVazcamQXhpKMP3 qqeYO9W7MHsGA1UdEQR0MHKCCyouZ2l0aHViLmlvgglnaXRodWIuaW+CDCouZ2l0 aHViLmNvbYIKZ2l0aHViLmNvbYIOd3d3LmdpdGh1Yi5jb22CFyouZ2l0aHVidXNl cmNvbnRlbnQuY29tghVnaXRodWJ1c2VyY29udGVudC5jb20wDgYDVR0PAQH/BAQD AgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjCBjwYDVR0fBIGHMIGE MECgPqA8hjpodHRwOi8vY3JsMy5kaWdpY2VydC5jb20vRGlnaUNlcnRUTFNSU0FT SEEyNTYyMDIwQ0ExLTQuY3JsMECgPqA8hjpodHRwOi8vY3JsNC5kaWdpY2VydC5j b20vRGlnaUNlcnRUTFNSU0FTSEEyNTYyMDIwQ0ExLTQuY3JsMD4GA1UdIAQ3MDUw MwYGZ4EMAQICMCkwJwYIKwYBBQUHAgEWG2h0dHA6Ly93d3cuZGlnaWNlcnQuY29t L0NQUzB/BggrBgEFBQcBAQRzMHEwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmRp Z2ljZXJ0LmNvbTBJBggrBgEFBQcwAoY9aHR0cDovL2NhY2VydHMuZGlnaWNlcnQu Y29tL0RpZ2lDZXJ0VExTUlNBU0hBMjU2MjAyMENBMS0xLmNydDAJBgNVHRMEAjAA MIIBfgYKKwYBBAHWeQIEAgSCAW4EggFqAWgAdwB2/4g/Crb7lVHCYcz1h7o0tKTN uyncaEIKn+ZnTFo6dAAAAYZ0gHV7AAAEAwBIMEYCIQCqfmfSO8MxeeVZ/fJzqqBB p+VqeRDUOUBVGyTTOn43ewIhAJT0S27mmGUlpqNiDADP+Jo8C6kYHF+7U6TY74bH XHAaAHYAc9meiRtMlnigIH1HneayxhzQUV5xGSqMa4AQesF3crUAAAGGdIB1agAA BAMARzBFAiEAguB+XQVANBj2MPcJzbz+LBPrkDDOEO3op52jdHUSW3ICIF0fnYdW qvdtmgQNSns13pAppdQWp4/f/jerNYskI7krAHUASLDja9qmRzQP5WoC+p0w6xxS ActW3SyB2bu/qznYhHMAAAGGdIB1SgAABAMARjBEAiAT/wA2qGGHSKZqBAm84z6q E+dGPQZ1aCMY52pFSfcw8QIgP/SciuZG02X2mBO/miDT2hCp4y5d2sc7FE5PThyC pbMwDQYJKoZIhvcNAQELBQADggEBADekGxEin/yfyWcHj6qGE5/gCB1uDI1l+wN5 UMZ2ujCQoKQceRMHuVoYjZdMBXGK0CIXxhmiIosD9iyEcWxV3+KZQ2Xl17e3N0zG yOXx2Kd7B13ruBxQpKOO8Ez4uGpyWb5DDoretV6Pnj9aQ2SCzODedvS+phIKBmi7 d+FM70tNZ6/2csdrG5xIU6d/7XYYXPD2xkwkU1dX4UKmPa7h9ZPyavopcgE+twbx LxoOkcXsNb/12jOV3iQSDfXDI41AgtFc694KCOjlg+UKizpemE53T5/cq37OqChP qnlPyb6PYIhua/kgbH84ltba1xEDQ9i4UYfOMiJNZEzEdSfQ498= -----END CERTIFICATE----- subject=C = US, ST = California, L = San Francisco, O = \u0026#34;GitHub, Inc.\u0026#34;, CN = *.github.io issuer=C = US, O = DigiCert Inc, CN = DigiCert TLS RSA SHA256 2020 CA1 --- No client certificate CA names sent Peer signing digest: SHA256 Peer signature type: RSA-PSS Server Temp Key: X25519, 253 bits --- SSL handshake has read 4060 bytes and written 393 bytes Verification: OK --- New, TLSv1.3, Cipher is TLS_AES_128_GCM_SHA256 Server public key is 2048 bit This TLS version forbids renegotiation. Compression: NONE Expansion: NONE No ALPN negotiated Early data was not sent Verify return code: 0 (ok) --- --- Post-Handshake New Session Ticket arrived: SSL-Session: Protocol : TLSv1.3 Cipher : TLS_AES_128_GCM_SHA256 Session-ID: 899A5EB90A464A1A310C86986066E2FCFB68AA146C1846809043BC0C7A739186 Session-ID-ctx: Resumption PSK: B24E53F7E7FF18D18BE22EE2ACE052DD858A2226E3F6528E0166A5C90FCA50F5 PSK identity: None PSK identity hint: None SRP username: None TLS session ticket lifetime hint: 3600 (seconds) TLS session ticket: 0000 - 1b bb 4f 78 61 17 18 f9-dd c9 5c 55 da 7e 75 f8 ..Oxa.....\\U.~u. 0010 - f7 88 9b a1 26 e4 5f 03-8f b7 3d b2 4f be df ac ....\u0026amp;._...=.O... 0020 - 24 40 e5 4f 46 0d 68 a3-e3 93 76 d0 5f bf 6d 11 $@.OF.h...v._.m. 0030 - 8a 31 67 e8 75 5d 1f c2-5f 68 6f e9 27 4c e1 46 .1g.u].._ho.\u0026#39;L.F 0040 - df 8c b2 92 e5 6f bf 0b-48 09 1b d5 b9 19 b7 9e .....o..H....... 0050 - 55 9c 04 b1 28 ae 4e 90-4b 6b c7 a8 0c b1 58 d2 U...(.N.Kk....X. 0060 - 46 6a 5c 9c ca 4d ac 52-f5 74 3a 48 78 f7 22 02 Fj\\..M.R.t:Hx.\u0026#34;. 0070 - b7 ab 64 78 c0 07 3a 62-d3 47 f2 51 48 2a b4 2e ..dx..:b.G.QH*.. 0080 - 96 a7 df a4 cb f1 9b 42-17 a8 0f 03 ba a7 50 63 .......B......Pc 0090 - 39 af 34 cd fe 3d b6 52-a1 f2 e9 53 b8 1e ee e1 9.4..=.R...S.... Start Time: 1705071930 Timeout : 7200 (sec) Verify return code: 0 (ok) Extended master secret: no Max Early Data: 0 --- read R BLOCK closed A verifica√ß√£o de status de revoga√ß√£o est√° dispon√≠vel para o certificado de entidade final.\no protocolo v1 sobre HTTP e o tipo de resposta b√°sica s√£o suportados. O status de revoga√ß√£o √© verificado via OCSP quando pelo menos uma destas condi√ß√µes for verdadeira:\nendere√ßo de URL de um OCSP responder √© configurado. A verifica√ß√£o da Autoridade de Acesso √† Informa√ß√£o (AIA) est√° ativada e o certificado a ser validado tem uma extens√£o AIA. A extens√£o AIA deve conter um m√©todo de acesso PKIK_AD_AD_OCSP com uma URI que indica o local HTTP do Responder do OCSP. [!NOTA] Apenas o primeiro OCSP Responder que √© identificado na extens√£o AIA √© consultado para o status de revoga√ß√£o.\nQuando ativado a verifica√ß√£o de URL e AIA, o URL responder √© consultado primeiro.\nA ordem pode ser mudada configurando o atributo da API Global Security Kit (GSKit) , GSK_OCSP_CHECK_AIA_FIRST. Consulta para um segundo responder ocorre apenas se o primeiro responder resultar em um status de revoga√ß√£o indeterminado. As sess√µes cliente com processamento de OCSP habilitado podem solicitar a sess√£o do servidor para enviar uma resposta do OCSP como parte da negocia√ß√£o de sess√£o para protocolos TLS TLSv1.3 e TLSv1.2.\nA sess√£o cliente processa a resposta do OCSP stapling no servidor, eliminando a necessidade do cliente consultar um do OCSP responder para o status de revoga√ß√£o de certificado. Uma sess√£o do servidor tamb√©m deve ativar o processamento de solicita√ß√£o de status do certificado, para suportar o stapling do OCSP quando solicitado por um software cliente. ","date":"21 January 2024","permalink":"/posts/rtfmaleatoriedadesparasysadmin-ocspstapling/","section":"","summary":"OSCP Stapling √© o servidor Web (e n√£o o navegador) obtendo resposta OCSP com status do certificado armazenando-o em cache, e esses dados s√£o inclu√≠dos nas respostas HTTPS junto com o certificado\u0026hellip;","title":"RTFM\u0026AleatoriedadesParaSysAdmin OCSPStapling"},{"content":"","date":"21 January 2024","permalink":"/tags/tls/","section":"Tags","summary":"","title":"TLS"},{"content":"","date":"9 January 2024","permalink":"/tags/ntp/","section":"Tags","summary":"","title":"NTP"},{"content":"","date":"9 January 2024","permalink":"/tags/rtfm/","section":"Tags","summary":"","title":"RTFM"},{"content":"Sempre existe a possibilidade de um dia aparecer um servidor com uma vers√£o de SO n√£o atual precisando que o NTP client seja configurado ou revisado‚Ä¶ :)\nInstalando o servi√ßo NTP\nInstale o pacote NTP com o utilit√°rio yum $ yum install ntp -y Em seguida liste os comandos de administra√ß√£o fornecidos pelo pacote npt $ ntp\u0026lt;tab\u0026gt;\u0026lt;tab\u0026gt; ntpd ntpdate ntpdc ntp-keygen ntpq ntpstat ntptime Inicialize o servi√ßo $ sudo service ntpd start ou $ sudo /etc/rc.d/init.d/ntpd start Ao iniciar o servi√ßo, analise em seguida os logs no /var/log/messages $ sudo tail /var/log/messages ou $ grep ntpd /var/log/messages Jul 23 13:11:51 labcentos01 yum[9343]: Installed: ntpdate-4.2.4p83.el6.centos.x86_64 Jul 23 13:12:11 labcentos01 ntpd[9375]: ntpd Fri Feb 22 11:23:27 UTC 2013 (1) Jul 23 13:12:11 labcentos01 ntpd[9376]: precision = 0.111 usec Jul 23 13:12:11 labcentos01 ntpd[9376]: Listening on interface #0 wildcard... Jul 23 13:12:11 labcentos01 ntpd[9376]: Listening on interface #1 wildca... Jul 23 13:12:11 labcentos01 ntpd[9376]: Listening on interface #2 lo, ::1... Jul 23 13:12:11 labcentos01 ntpd[9376]: Listening on interface #3 eth0, .... Jul 23 13:12:11 labcentos01 ntpd[9376]: Listening on interface #4 lo, 127.0.... Automatize o servi√ßo para que inicie no boot: $ sudo chkconfig --level 35 ntpd on Configura√ß√£o do arquivo padr√£o do servi√ßo ‚Äú/etc/ntp.conf‚Äù\nSegue o arquivo padr√£o fornecido pelo pacote de instala√ß√£o: # be tightened as well, but to do so would effect some of # the administrative functions. restrict 127.0.0.1 restrict -6 ::1 # Hosts on local network are less restricted. #restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap # Use public servers from the pool.ntp.org project. # Please consider joining the pool (http://www.pool.ntp.org/join.html). server 0.centos.pool.ntp.org iburst server 1.centos.pool.ntp.org iburst #broadcast 192.168.1.255 autokey # broadcast server #broadcastclient # broadcast client #broadcast 224.0.1.1 autokey # multicast server #multicastclient 224.0.1.1 # multicast client #manycastserver 239.255.254.254 # manycast server #manycastclient 239.255.254.254 autokey # manycast client # Enable public key cryptography. #crypto includefile /etc/ntp/crypto/pw # Key file containing the keys and key identifiers used when operating # with symmetric key cryptography. keys /etc/ntp/keys # Specify the key identifiers which are trusted. #trustedkey 4 8 42 # Specify the key identifier to use with the ntpdc utility. #requestkey 8 # Specify the key identifier to use with the ntpq utility. #controlkey 8 # Enable writing of statistics records. #statistics clockstats cryptostats loopstats peerstat Modifique as linhas ‚Äúserver‚Äù, substituindo pelo servidor NTP local; sendo uma linha para cada servidor\u0026hellip; : server 0.redhat.pool.ntp.org iburst server 1.redhat.pool.ntp.org iburst Modificando para o NTP Brasileiro ou na LAN: server 192.0.2.151 iburst ou server a.st1.ntp.br iburst ou server a.ntp.br iburst a flag iburst faz com que uma saraivada de mensagens sejam trocadas para preparar os dados e ajustar o rel√≥gio por cerca de 10s. Reinicie o servi√ßo NTP sudo /etc/init.d/ntpd restart Agora visualize como ficou o arquivo de configura√ß√£o do servi√ßo NTP: $ sudo cat /etc/ntp.conf |grep -E -v \u0026#34;^$|^#\u0026#34; |nl 1 driftfile /var/lib/ntp/drift 2 restrict default kod nomodify notrap nopeer noquery 3 restrict -6 default kod nomodify notrap nopeer noquery 4 restrict 127.0.0.1 5 restrict -6 ::1 6 server 192.0.2.151 iburst 7 includefile /etc/ntp/crypto/pw 8 keys /etc/ntp/keys Outra op√ß√£o interessante para habilitar no ‚Äúntp.conf‚Äù para a configura√ß√£o cliente √© a diretiva de estat√≠sticas: # estatisticas do ntp que exibe informa√µes de funcionamento. statsdir /var/log/ntpstats/ statistics loopstats peerstats filegen loopstats file loopstats type day enable ilegen peerstats file peerstats type day enable Verificando se o daemon NTP est√° devidamente configurado e operando:\nExecute o comando ‚Äúntpq‚Äù com a op√ß√£o ‚Äú-c peers‚Äù que lista estat√≠sticas dos servidores cadastrados no arquivo /etc/ntp.conf. $ sudo ntpq -c pe** ou $ sudo ntpq -c peers** se a resposta for algo parecido com a descrita abaixo, o daemon n√£o est√° ativo localhost.localdomain: timed out, nothing received *****Request timed out** se a resposta for pr√≥xima da descrita abaixo, o NTP est√° operando: remote refid st t when poll reach delay offset jitter ========================================================================== *192.0.2.151 200.186.125.195 2 u 84 1024 377 0.750 0.138 0.279 Segue mais um resultado de um NTP com mais de 1 servidor de horas configurado remote refid st t when poll reach delay\toffset\tjitter ============================================================================= +a.st1.ntp.br .ONBR. 1 u 8 64\t1 11.929 -0.405\t1.353 201.49.148.135 .STEP. 16 u - 64 0 0.000 0.000 0.000 *d.st1.ntp.br .ONBR. 1 u 4 64 1 19.496 -0.530\t0.392 -a.ntp.br 200.160.7.186 2 u 4 64 1 11.061 0.117\t1.151 +b.ntp.br 200.20.186.76 2 u - 64 1 14.459 -2.561\t2.544 stratum 16 indica servidor inoperante. Compreendendo cada campo offset - mostra em milissegundos o quanto a hora no servidor precisa adiantar ou se atrasar para ficar igual a do servidor NTP ( esses valores devem estar em milissegundos! Acima de segundos n√£o √© um bom resultado.) delay mostra o tempo que o pacote demora para ir ao servidor e voltar para o host. jitter mostra o quanto em milissegundos existe de varia√ß√£o nas medidas de deslocamento dos pacotes e, o quanto mais baixo melhor. reach mostra o resultado em octal das √∫ltimas 8 tentativas de conex√£o ao servidor preferencial de horas. O valor esperado √© ‚Äú377‚Äù que indica que as √∫ltimas tentativas obtiveram sucesso! Valores diferentes indicam falhas ocorridas. Para melhor compreens√£o, √© um registrador de 8 bits que vai girando para a esquerda representado na forma octal, que mostra o resultado das √∫ltimas 8 consultas √† fonte de tempo: 377 = 11.111.111 significa que todas as consultas foram bem sucedidas; outros n√∫mero indicam falhas, por exemplo 375 = 11.111.101, indica que a pen√∫ltima consulta falhou. refid mostra a refer√™ncia (par do sistema) ao qual, o servidor de tempo remoto est√° sincronizado. st mostra o strato da fonte de tempo. when quanto segundos se passaram desde a √∫ltima consulta √† essa fonte de tempo. poll mostra de quantos em quantos segundos essa fonte √© consultada. Execute-o novamente com a op√ß√£o ‚Äú-c rv‚Äù para visualizar o estado da hora local $ sudo ntpq -c rv assID=0 status=46f4 leap_add_sec, sync_ntp, 15 events, event_peer/strat_chg, version=\u0026#34;ntpd 4.2.4p8@1.1612-o Thu Jan 10 15:17:40 UTC 2013 (1)\u0026#34;, processor=\u0026#34;x86_64\u0026#34;, system=\u0026#34;Linux/2.6.32-279.19.1.el6.x86_64\u0026#34;, leap=01, stratum=3, precision=-24, rootdelay=15.668, rootdispersion=59.025, peer=14178, refid=192.0.2.151, reftime=d59b9d48.ef695513 Thu, Jul 25 2013 9:49:12.935, poll=10, clock=d59ba39e.61ba5ac8 Thu, Jul 25 2013 10:16:14.381, state=4, offset=0.073, frequency=7.577, jitter=0.051, noise=0.232, stability=0.018, tai=0 compreendendo os campos version mostra a vers√£o do NTP e sua data e hora de constru√ß√£o. processor mostra a vers√£o e plataforma do hardware. stratum que pode ir de 1 at√© 15 mostra a dist√¢ncia que o servidor NTP usado est√° do o rel√≥gio de refer√™ncia que transmite a hora UCT, que por sua vez est√° em stratum-0! Lembrando que quanto mais pr√≥ximo o servidor estiver do stratum-0, menos atraso ele ter√° em reala√ß√£o ao UCT; ou seja quanto menor a dist√¢ncia melhor\u0026hellip; Vari√°vel ‚Äúpeer‚Äù ID associado ao servidor NTP preferencial. reftime mostra a data e hora que o servidor preferencial foi atualizado pela √∫ltima vez pelo seu stratum superior. clock data e hora do dia! Aquele que foi setado/configurado no seu servidor host. offset deslocamento, quanto o rel√≥gio local tem de ser adiantado ou atrasado para chegar √† hora certa (horaigual √† do estrato 0). precision precis√£o indicada com o expoente de um n√∫mero base 2 Vari√°vel ‚Äúrootdisperion‚Äù erro m√°ximo da medida de offset em rela√ß√£o ao strato 0, em milissegundos. rootdelay atraso ou tempo de ida e volta dos pacotes at√©o strato 0, em milissegundos. refid o par do sistema, ou principal refer√™ncia. frequency erro na freq√º√™ncia do rel√≥gio local, em rela√ß√£o √† freq√º√™ncia do estrato 0, em partes por milh√£o (PPM). Obtendo informa√ß√µes separadamente de cada servidor NTP configurado! Essa forma √© utilizada por exemplo para medir as informa√ß√µes de um servidor NTP secund√°rio afim de tomar alguma decis√£o como a de substituir o servidor preferencial problem√°tico por algum outro do pool\u0026hellip; Primeiro liste o ID dos servidores NTP configurados com o comando ‚Äúntpq -c as‚Äù: $ sudo ntpq -c as ou sudo ntpq -c associations ind assID\tstatus conf\treach\tauth\tcondition\tlast_event\tcnt ===================================================================== 1 14178\t9614 yes\tyes none\tsys.peer\treachable\t1 Depois de obtido o ID obtenha as informa√ß√µes do servisor NTP entrando na linha de comando da ferramenta ntpq e utilize a op√ß√£o ‚Äúrv‚Äù seguido do ID. $ sudo ntpq [enter] $ sudo ntpq\u0026gt; rv 14178 assID=14178 status=9614 reach, conf, sel_sys.peer, 1 event, event_reach, srcadr=192.0.2.151, srcport=123, dstadr=192.0.2.140, dstport=123, leap=00, stratum=2, precision=-23, rootdelay=16.342,rootdispersion=16.281, refid=200.186.125.195, reach=377, unreach=0, hmode=3, pmode=4, hpoll=10, ppoll=10, flash=00 ok, keyid=0, ttl=0, offset=0.345, delay=1.032, dispersion=14.833, jitter=0.124, reftime=d59c0533.3051b8eb Thu, Jul 25 2013 17:12:35.188, org=d59c0552.e99941c5 Thu, Jul 25 2013 17:13:06.912, rec=d59c0552.e9a47a2b Thu, Jul 25 2013 17:13:06.912, xmt=d59c0552.e95ea055 Thu, Jul 25 2013 17:13:06.911, filtdelay= 1.03 1.12 1.22 1.10 0.64 1.30 1.57 1.09, filtoffset= 0.34 0.22 0.00 -0.01 0.16 -0.41 -0.41 -0.32, filtdisp= 0.00 15.38 30.75 46.11 61.50 76.85 92.22 107.58 Caso precise gerar alguma evid√™ncia para documenta√ß√£o, etc\u0026hellip; √â poss√≠vel gerar gr√°ficos utilizando os logs de estat√≠sticas do diret√≥rio ‚Äú/var/log/ntpstats‚Äù, que s√£o:\nloopstats, que apresenta as informa√ß√µes do loop local, ou seja, as vari√°veis do sistema. formato 54475 73467.286 -0.000057852 31.695 0.000015298 0.006470 4 54475 73548.286 -0.000084064 31.688 0.000017049 0.006471 4 54475 73682.286 -0.000077221 31.678 0.000016130 0.006988 4 54475 73698.286 -0.000077448 31.677 0.000015103 0.006550 4 54475 73761.286 -0.000083230 31.672 0.000014275 0.006376 4 54475 73889.286 -0.000059100 31.665 0.000015846 0.006487 4 54475 74004.285 -0.000045825 31.660 0.000015548 0.006324 4 - campos: - coluna 1: day - coluna 2: second - coluna 3: offset - coluna 4: drift compensation - coluna 5: estimed error - coluna 6: stability - coluna 7: polling interval peerstats que apresenta as informa√ß√µes de cada associa√ß√£o formato 54475 34931.294 200.20.186.75 9074 0.009958844 0.008390600 0.000390895 0.000132755 54475 34931.301 200.192.232.43 f0f4 0.000348814 0.015550265 0.001120348 0.000023645 54475 34932.303 200.189.40.28 f0f4 0.000810708 0.017701986 0.188995109 0.000043145 54475 34934.286 200.160.0.28 f0d4 0.000332344 0.000271801 0.000620139 0.000037467 54475 34935.286 200.160.7.165 9614 0.000003557 0.000216088 0.000826694 0.000022076 - campos - coluna 1: day - coluna 2: second - coluna 3: address - coluna 4: status - coluna 5: offset - coluna 6: delay - coluna 7: dispersion - coluna 8: skew/variance Al√©m de poder ser usado para documenta√ß√£o, tamb√©m fica mais f√°cil a leitura com o gr√°fico para ilustr√°-lo. Excell pode ser usado\u0026hellip; Mas porque n√£o usar terminal e gnuplot :). segue algumas refer√™ncias: IBM Segue um exemplo de uso: Crie um arquivo texto com um nome pretendido, com o seguinte conte√∫do: cat \u0026lt;\u0026lt;Fin\u0026gt; /tmp/deslocamento.txt set term gifset output \u0026#39;Deslocamento.png\u0026#39; set title \u0026#34;Deslocamento\u0026#34; plot \u0026#34;/var/log/ntpstats/loopstats\u0026#34; using 2:3 t\u0026#34;deslocamento\u0026#34; with linespoints lt rgb \u0026#34;#d82886\u0026#34;; Fin Estamos referenciando o arquivo loopstats e, fazendo uso das colunas 2 e 3! A coluna 2 indica o tempo, no dia, em segundos; e a coluna 3 indica o deslocamento, em milissegundos. Tamb√©m estamos utilizando cores RGB declarada em hexadecimal. Agora geramos o gr√°fico $ gnuplot /tmp/deslocamento.txt ","date":"9 January 2024","permalink":"/posts/rtfmaleatoriedadesparasysadmin-oldntp/","section":"","summary":"Sempre existe a possibilidade de um dia aparecer um servidor com uma vers√£o de SO n√£o atual precisando que o NTP client seja configurado ou revisado‚Ä¶ :)","title":"RTFM \u0026 Aleatoriedades Para SysAdmin - Old NTP Client"},{"content":"","date":"6 January 2024","permalink":"/tags/first/","section":"Tags","summary":"","title":"first"},{"content":"O intuito desse how to √© apoiar na solu√ß√£o de problemas rede de containers Docker\nDisclaimer # Se caiu aqui no momento em que est√° tentando apagar um incendio: voc√™ est√° no lugar errado!\nMas retorne depois do incendio .. ;) Requeriments # Para fazer um debug descente, precisamos estar familiarizados com quest√µes b√°sicas!\nComo as coisas \u0026ldquo;funfam\u0026rdquo; dabaixo do cap√¥ da containeriza√ß√£o # Namespaces Linux fornecem as tecnologias fundamentais da implementa√ß√£o de containers. Fornecendo isolamento de recursos globais entre processos independentes\nNamespaces fornece isolamento e n√£o restri√ß√£o ao hardware adjacente! Isso √© papel do cgroups S√£o 8 namespaces at√© o momento\nMount - Mount points cria uma hierarquia de diret√≥rios isolado do sistema de arquivos do host, visivel apenas pelo processo em execu√ß√£o nessa √°rvore de diret√≥rios do namespace. UTS - Hostname and NIS domain name cria isolamento dos identificadores hostname e o NIS domain name que s√£o definidos usando sethostname(2), setdomainname(2) e pode ser recuperado usando uname(2) , gethostname(2) e getdomainname(2) . IPC - System V IPC, POSIX message queues isolam sysvipc(7) - System V Objetos IPC e mq_overview(7) - POSIX filas de mensagens. Dessa forma, o namespace tem seus identificadores IPC e filas de mensageria POSIX pr√≥prios, vistos apenas pelos processos que executam nele. PID - Process IDs Cria espa√ßo do n√∫mero de ID do processo isolados do host. Permite que o processo containerizado fa√ßa uso do recurso bem legal, o Freezing of tasks que permite suspender um conjunto de processos de um cont√™iner e migralos para outro container, em outro host, enquanto os processos internos mant√™m os mesmos PIDs\u0026hellip; agrade√ßa ao Freezing tasks pelas m√°gicas no seu notebook ao hibernar\u0026hellip; Network - Network devices, stacks, ports, etc. fornecem isolamento dos dispositivos de rede, pilhas de protocolos IP v4 e v6, tabelas de roteamento IP, regras de firewall, os diret√≥rios /proc/net (link para /proc/ pid /net ), /sys/class/net , arquivos em /proc/sys/net , soquetes etc\u0026hellip; Bem como tamb√©m dos soquetes abstratos do domain unix(7). Tanto uma interface de rede f√≠sica, quanto uma veth(4) User - User and group IDs Faz isolamento dos recursos credentials(7) que s√£o os identificadores relacionados √† seguran√ßa e atributos, em particular, IDs de usu√°rio e IDs de grupo, o diret√≥rio raiz, keyrings(7) e capabilities(7). Cgroup - Cgroup root directory Faz o isolamento virtualizando a vis√£o do cgroups(7) por um processo via /proc/pid/cgroup e /proc/pid/mountinfo. Dessa forma o namespace possui seu pr√≥prio conjunto de diret√≥rios raiz cgroup, que s√£o os caminhos relativos dos registros correspondentes no arquivo /proc/pid/cgroup, quando um processo cria um novo namespace usando clone(2) ou unshare(2) com a flag CLONE_NEWCGROUP\u0026hellip; Time - Boot and monotonic clocks O time afeta afeta v√°rias APIs como o clock_gettime(2), clock_nanosleep(2), nanosleep(2), timer_settime(2), timerfd_settime(2) e /proc/uptime, fazendo a virtualiza√ß√£o isolada dos rel√≥gios de sistema: CLOCK_MONOTONIC (e tamb√©m CLOCK_MONOTONIC_COARSE e CLOCK_MONOTONIC_RAW ), um rel√≥gio n√£o configur√°vel que representa um tempo mon√≥tono desde ent√£o(conforme descrito por POSIX - \u0026ldquo;algun ponto n√£o especificado no passado\u0026rdquo;). CLOCK_BOOTTIME (e tamb√©m CLOCK_BOOTTIME_ALARM ), um rel√≥gio n√£o configur√°vel que √© id√™ntico a CLOCK_MONOTONIC , exceto que tamb√©m inclui qualquer momento em que o sistema est√° suspenso. Dessa forma j√° conseguimos tridimensionalizar mentalmente que:\nA coisa toda √© meio que um processo containerizado por recursos que o fazem rodar em um diret√≥rio onde existir√° um sistema de arquivos, fazendo com que o processo o veja como o uma arvore filesystem, com seus pid/gid e pilha de rede, hostname e domainname / nisdomainname bem como as chamadas IPC e rel√≥gios de sistema isolados do host hospedeiro.. Aqui vale lembrar que esses namespaces n√£o s√£o de propriedade do processo! Eles operam de forma independente qualquer outro processo pode ser containerizado nesses namespaces j√° existentes, dessa forma compatilhando-os\u0026hellip; E de forma independente pois voc√™ pode executar um processo dentro de um namespace Network, sem que ele tenha um Mount e UTS por exemplo isso √© massa porque √© poss√≠vel usar um comando que existe no Host, por√©m a execu√ß√£o ser√° dentro de um namespace! por isso, n√£o √© necess√°rio instalar uma tool em um Mount de um processo containerizado para fazer teste ou debug\u0026hellip; O que nos interessa √© o namespace Network! Por isso, apesar de eu explorar outros pontos, nesse nivelamento: network √© o nosso foco\ncontinua\u0026hellip; # ","date":"6 January 2024","permalink":"/posts/rtfmaleatoriedadesparasysadminsecopsdevopssnre-ntcdocker/","section":"","summary":"O intuito desse how to √© apoiar na solu√ß√£o de problemas rede de containers Docker","title":"RTFM \u0026 Aleatoriedades Para SysAdmin, SecOps, DevOps,{S,N}RE - Network Trobleshooting Container Docker"},{"content":"Swapping foi introduzida como um backup em disco para p√°ginas n√£o mapeadas. E existem tr√™s tipos de p√°ginas que devem ser tratadas pelo subsistema de swapping:\nPages que pertencem a uma regi√£o de mem√≥ria an√¥nima de um processo (User Mode stack) Dirty pages que pertencem a um mapeamento de mem√≥ria privada de um processo Pages que pertencem a uma regi√£o de mem√≥ria compartilhada IPC Numa \u0026ldquo;Regular Paging\u0026rdquo; cada entrada na \u0026ldquo;Page Table\u0026rdquo; inclui um sinalizador, uma \u0026ldquo;Present flag\u0026rdquo; e o Kernel explora esse sinalizador para sinalizar que uma p√°gina pertencente a um espa√ßo de endere√ßo de um processo qualquer foi \u0026ldquo;swapped out\u0026rdquo;! E al√©m desse sinalizador, o Linux faz uso dos bits restantes do \u0026ldquo;Page Table\u0026rdquo; pra armazenar um identificador de \u0026ldquo;swapped-out page\u0026rdquo; que informa a localiza√ß√£o no disco.\nA Principais caracter√≠sticas do subsistema swapping s√£o:\nConfigura area swap para armazenamento de Pages que n√£o possuem \u0026ldquo;disk image\u0026rdquo;. Gerencia espa√ßo na √°rea de swap alocando e liberando \u0026ldquo;page slots\u0026rdquo;. Fornece a fun√ß√£o de \u0026ldquo;swap out\u0026rdquo; pages da RAM para a √°rea de swap e \u0026ldquo;swap in\u0026rdquo; pages da √°rea de swap para RAM. Faz uso da ‚Äúswapped-out page identifiers‚Äù das entradas na \u0026ldquo;Page Table\u0026rdquo; que foram swapped para acompanhar as posi√ß√µes dos dados na √°rea de swap. Em suma, o swapping √© o principal recurso de \u0026ldquo;page frame reclaiming\u0026rdquo;! E se queremos ter certeza que todos os \u0026ldquo;page frames\u0026rdquo; obtidos por um processo, n√£o apenas os \u0026ldquo;pages\u0026rdquo; que contem \u0026ldquo;disk image\u0026rdquo;, possam ser recuperados pelo PFRA, devemos fazer uso do swapping\u0026hellip;\nCom isso podemos deduzir que grandes √°reas de swap d√£o poder ao Kernel para iniciar v√°rios processos onde o total de solicita√ß√µes de mem√≥ria ultrapassa a quantidade de RAM f√≠sica.\nE como na TI, nem tudo s√£o flores, precisamos nos atentar que simular RAM em disco, nos traz um desempenho em milissegundos se comparado aos nanosegundos da RAM f√≠sica ;)\n[!NOTE] Referencia: Daniel P. Bovet, Marco Cesati - Understanding the Linux Kernel - Cap√≠tulo 2 - Memory Addressing e Cap√≠tulo 17 - Page Frame Reclaiming\nAgora que nivelamos a introdu√ß√£o sobre swapping, vamos criar um espa√ßo de troca, do tipo arquivo, que n√£o muda em nada quando parti√ß√£o em disco: a n√£o ser o processo de particionamento de disco etc\u0026hellip;\nVerificando se h√° algum swap sudo swapon --show Criando arquivo de swap de 2GiB sudo dd if=/dev/zero of=/swapfile count=2192 bs=1MiB Alterando permiss√£o do arquivo sudo chmod 600 /swapfile Marcando o arquivo como um espa√ßo de swap sudo mkswap /swapfile Verificando se est√° tudo ok sudo swapon --show Adicionando a linha no \u0026lsquo;/etc/fstab\u0026rsquo; para montagem autom√°tica echo \u0026#39;/swapfile none swap sw 0 0\u0026#39; | sudo tee -a /etc/fstab Ajustando a configura√ß√£o de Swap O par√¢metro /proc/sys/vmwappiness configura a frequ√™ncia com que o sistema transfere dados da RAM para o espa√ßo de swap. Sendo um¬†valor entre 0 e 100 que representa uma porcentagem! Um valor baixo significa que o seu sistema Linux troca processos raramente enquanto um alto valor significa que os processos s√£o gravados em disco imediatamente\nCom valores pr√≥ximos de zero, o kernel n√£o ir√° transferir dados para o¬†disco a menos que seja absolutamente necess√°rio. Lembre-se, as¬†intera√ß√µes com o arquivo de swap s√£o ‚Äúdispendiosas‚Äù! Pois s√£o mais lentas que as intera√ß√µes com a RAM. Valores que est√£o mais pr√≥ximos de 100 ir√£o tentar colocar mais dados¬†no swap em um esfor√ßo para manter mais espa√ßo da RAM livre. Dependendo¬†do perfil de mem√≥ria de seus aplicativos ou do motivo pelo qual voc√™¬†est√° usando o seu servidor, isso pode ser melhor em alguns casos. Swappiness: 60 Swap a partir de 40% de uso de RAM. Swappiness: 40 Swap a partir de 60% de uso de RAM. Swappiness: 20 Swap a partir de 80% de uso de RAM. Swappiness: 10. Swap a partir de 90% de uso de RAM. Swappiness: 1 Swap a partir de 99% de uso de RAM. Para um desktop, um valor de swappiness de 60 n√£o √© um valor ruim e normalmente √© o valor dfault em uma distro Linux. Mas para um servidor, podemos deix√°-lo mais pr√≥ximo de 0, para fazer uso somente quando realmente necess√°rio\nComo exemplo podemos setar para¬†\u0026lsquo;10\u0026rsquo; para que o swap seja utilizado ap√≥s 90% de RAM ocupada\nsudo sysctl vm.swappiness=10 Para garantir que esse valor ir√° se manter ap√≥s um boot\necho \u0026#39;vm.swappiness=10\u0026#39; | sudo tee -a /etc/sysctl.conf Mas como sempre, n√£o h√° uma receita de bolo! Em determinados cen√°rios¬†trocar processos de tempo de execu√ß√£o da RAM para o disco, deve ser evitado, noutros h√° vantagem\u0026hellip; Conhecer a aplica√ß√£o ir√° lhe guiar na configura√ß√£o mais apropriada!\nAjustando a confiura√ß√£o do vfs_cache_pressure Esta op√ß√£o controla a tend√™ncia do kernel de recuperar a mem√≥ria que √© usada para cache de diret√≥rios e objetos inode.\nNo valor padr√£o de vfs_cache_pressure=100, o kernel tentar√° recuperar dentries e inodes a uma taxa \u0026ldquo;justa\u0026rdquo; em rela√ß√£o ao pagecache e √† recupera√ß√£o do swapcache. Diminuir vfs_cache_pressure faz com que o kernel prefira manter os caches dentry e inode. Quando vfs_cache_pressure=0, o kernel nunca recuperar√° dentries e inodes devido √† press√£o de mem√≥ria e isso pode levar facilmente a condi√ß√µes de falta de mem√≥ria. Aumentar vfs_cache_pressure al√©m de 100 faz com que o kernel prefira recuperar dentries e inodes. Podemos definir isso em um valor mais conservador como 50\nsudo sysctl vm.vfs_cache_pressure=50 Vamos garantir que ap√≥s um boot o valor permane√ßa\necho \u0026#39;vm.vfs_cache_pressure=50\u0026#39; | sudo tee -a /etc/sysctl.conf Agora sim! Vamos ativar o novo espa√ßo de swapping sudo swapon /swapfile ","date":"6 January 2024","permalink":"/posts/rtfmaleatoriedadesparasysadmin-swap/","section":"","summary":"Swapping foi introduzida como um backup em disco para p√°ginas n√£o mapeadas.","title":"RTFM \u0026 AleatoriedadesParaSysAdmin - Swap"},{"content":"Para quando a lei de Murphy exerce a sua for√ßa. √â nessa hora, que do seu kit MacGyver, voc√™ tira o journalctl para identificar o que pode estar errado!\nDas muitas formas poss√≠veis. Tem mais essa:\n$ journalctl --no-pager --since today --grep \u0026#39;fail|error|fatal\u0026#39; --output json|jq Com a op√ß√£o \u0026ldquo;\u0026ndash;grep\u0026rdquo; filtramos palavras chave Com a op√ß√£o \u0026ldquo;\u0026ndash;since\u0026rdquo; melhoramos nossa assertividade. Ex: \u0026ndash;since \u0026ldquo;1 hour ago\u0026rdquo; \u0026ndash;since \u0026ldquo;1 minutes ago\u0026rdquo; \u0026ndash;since \u0026ldquo;5 seconds ago\u0026rdquo; \u0026ndash;since 07:00 \u0026ndash;until \u0026ldquo;1 hour ago\u0026rdquo; Com o \u0026ldquo;\u0026ndash;output\u0026rdquo; usando o formato json, fazemos um parser amig√°vel pra organizarmos com jq. $ journalctl --no-pager --since today --grep \u0026#39;fail|error|fatal\u0026#39; --output json|jq { \u0026#34;_PID\u0026#34;: \u0026#34;5605\u0026#34;, \u0026#34;_SYSTEMD_SLICE\u0026#34;: \u0026#34;user-1000.slice\u0026#34;, \u0026#34;_SYSTEMD_USER_UNIT\u0026#34;: \u0026#34;org.gnome.Shell@wayland.service\u0026#34;, \u0026#34;_RUNTIME_SCOPE\u0026#34;: \u0026#34;system\u0026#34;, \u0026#34;_SYSTEMD_UNIT\u0026#34;: \u0026#34;user@1000.service\u0026#34;, \u0026#34;__SEQNUM\u0026#34;: \u0026#34;7540847\u0026#34;, ... ... \u0026#34;_SYSTEMD_OWNER_UID\u0026#34;: \u0026#34;1000\u0026#34;, \u0026#34;SYSLOG_IDENTIFIER\u0026#34;: \u0026#34;google-chrome.desktop\u0026#34;, \u0026#34;_COMM\u0026#34;: \u0026#34;cat\u0026#34;, \u0026#34;__MONOTONIC_TIMESTAMP\u0026#34;: \u0026#34;285995139402\u0026#34;, \u0026#34;_CMDLINE\u0026#34;: \u0026#34;cat\u0026#34;, \u0026#34;_BOOT_ID\u0026#34;: \u0026#34;da45ccab9c404e9444444a9c51300cae\u0026#34;, \u0026#34;_EXE\u0026#34;: \u0026#34;/usr/bin/cat\u0026#34; } { ... ... Ainda √© poss√≠vel filtrar por algum objeto com o jq e quantificar as ocorr√™ncias com sort e uniq\nTalvez, alguns objetos interessantes seriam _EXE, _CMDLINE, _PID, SYSLOG_IDENTIFIER, MESSAGE\u0026hellip; $ journalctl --no-pager --since \u0026#34;60 minutes ago\u0026#34; --grep \u0026#39;fail|error|fatal\u0026#39; --output json|jq \u0026#39;.SYSLOG_IDENTIFIER\u0026#39; | sort | uniq -c 1 \u0026#34;audit\u0026#34; 1 \u0026#34;cupsd\u0026#34; 19 \u0026#34;discord.desktop\u0026#34; 2 \u0026#34;fprintd\u0026#34; 7 \u0026#34;gnome-shell\u0026#34; 10518 \u0026#34;google-chrome.desktop\u0026#34; 18 null 4 \u0026#34;org.gnome.Software.desktop\u0026#34; 173 \u0026#34;slack.desktop\u0026#34; ","date":"5 January 2024","permalink":"/posts/rtfmaleatoriedadesparasysadmin-journalctl/","section":"","summary":"Para quando a lei de Murphy exerce a sua for√ßa.","title":"RTFM \u0026 Aleatoriedades para SysAdmin - journalctl "},{"content":"","date":"5 January 2024","permalink":"/tags/systemd/","section":"Tags","summary":"","title":"SystemD"},{"content":"RAM √© um hardware valioso e caro bem como a sua lat√™ncia √© ainda mais importante que a lat√™ncia do disco. E por isso, o kernel Linux tenta ao m√°ximo otimizar os uso da mem√≥ria, fazendo uso de t√©cnicas como compartilhando de p√°ginas entre processos e Page Cache para melhorar a velocidade de I/O de armazenamento, armazenando um subconjunto de dados do disco na mem√≥ria.\nO Page Cache realiza compartilhamento impl√≠cito de mem√≥ria e de forma ass√≠ncrona com o armazenamento em segundo plano! Isso por s√≠ s√≥, traz ainda mais complexidade √† estimativa de uso de mem√≥ria por parte dos administradores!\nMas o que √© Page Cache # o Page Cache faz parte do Virtual File System - VFS que √© uma camada de software do n√∫cleo que trata de todas as chamadas de sistema relacionadas a um sistema de arquivos Unix.\nSua principal vantagem √© prover uma interface gen√©rica para diversos tipos de sistemas de arquivos. Ou seja, o VFS permite que chamadas de sistemas gen√©ricas, tais como open( ) e read( ),possam ser executadas independentemente do sistema de arquivos usados ou do meio f√≠sico! O que implica diretamente na lat√™ncia de I/O das opera√ß√µes de leitura e grava√ß√£o.\nQuando um sistema grava dados no cache, em algum momento tamb√©m deve gravar esses dados no armazenamento. O tempo dessa grava√ß√£o √© controlado pelo que √© conhecido como write policy, e existem duas abordagens b√°sicas de escrita: Write-through: a grava√ß√£o √© feita de forma s√≠ncrona tanto no cache quanto no armazenamento de apoio.\nWrite-back: inicialmente, a escrita √© feita apenas no cache. A grava√ß√£o no armazenamento de apoio √© adiada at√© que o conte√∫do modificado esteja prestes a ser substitu√≠do por outro bloco de cache.\nNesse link voc√™ pode ter mais informa√ß√µes sobre o algor√≠timo Page √© a unidade de mem√≥ria que o Kernel trabalha com Page Cache, e geralmente possui 4k de comprimento m√≠nimo de armazenamento no Page Cache.\nDessa forma todo I/O de arquivo est√° alinhado a uma quantidade espec√≠fica de p√°ginas\u0026hellip; At√© aqui, podemos entender que o Page Cache, √© o principal cache de disco usado pelo kernel do Linux e √© utilizado ao ler ou gravar no disco quando novas p√°ginas s√£o adicionadas ao Page Cache para satisfazer as solicita√ß√µes de leitura dos processos do User Mode stack.\nSe a p√°gina ainda n√£o estiver no cache, uma nova entrada ser√° adicionada ao cache e preenchida com os dados lidos do disco. Se houver mem√≥ria livre suficiente, a p√°gina √© mantida no cache por um per√≠odo indefinido e pode ent√£o ser reutilizada por outros processos sem acessar o disco. Da mesma forma, antes de gravar page de dados em um dispositivo de bloco, o kernel verifica se a page correspondente j√° est√° inclu√≠da no cache; caso contr√°rio, uma nova entrada √© adicionada ao cache e preenchida com os dados a serem gravados no disco.\nA transfer√™ncia de dados de I/O n√£o come√ßa imediatamente: - a atualiza√ß√£o do disco √© atrasada por alguns segundos, dando assim aos processos a chance de modificar ainda mais os dados a serem gravados em outras palavras, o kernel implementa opera√ß√µes de deferred write As p√°ginas inclu√≠das no Page Cache podem ser os seguintes tipos:\nPages contendo dados de arquivos regulares; no Cap√≠tulo 16, descrevemos como o kernel lida com opera√ß√µes de leitura, grava√ß√£o e mapeamento de mem√≥ria neles. Pages contendo diret√≥rios; o Linux lida com os diret√≥rios de forma muito semelhante aos arquivos normais. Pages contendo dados lidos diretamente de arquivos de dispositivos de bloco (ignorando a camada do sistema de arquivos); o kernel os trata usando o mesmo conjunto de fun√ß√µes como para pages contendo dados de arquivos regulares. Pages contendo dados de processos do User Mode stack que foram trocados em disco; o kernel pode for√ßar a manter-se armazenado em page cache algumas pages cujo conte√∫do j√° foi escrito em uma √°rea de swap. Pages pertencentes a arquivos de sistemas de arquivos especiais, como o sistema de arquivos especial shm usado para regi√£o de mem√≥ria compartilhada de comunica√ß√£o entre processos (IPC). Como podemos ver, cada page inclu√≠da no Page Cache cont√©m dados pertencentes a algum arquivo. Este arquivo ‚Äì ou mais precisamente o inode do arquivo ‚Äì √© chamado de page‚Äôs owner.\nPraticamente todas as opera√ß√µes read() e write() de arquivos dependem do Page Cache.\na √∫nica exce√ß√£o ocorre quando um processo abre um arquivo com a flag O_DIRECT definido: neste caso, o cache da p√°gina √© ignorado e as transfer√™ncias de dados de E/S fazem uso de buffers no espa√ßo de endere√ßo do modo de usu√°rio do processo. V√°rias aplica√ß√µes database fazem uso da flag O_DIRECT pra que assim possam faze uso do pr√≥prio algor√≠timo de caching\u0026hellip; Os projetistas do kernel implementaram o Page Cache para atender a dois requisitos principais:\nLocalizar rapidamente um page espec√≠fica contendo dados relativos a um determinado propriet√°rio. Para aproveitar ao m√°ximo o cache da p√°gina, pesquis√°-lo deve ser uma opera√ß√£o muito r√°pida. Acompanhar como cada page do cache deve ser tratada ao ler ou escrever seu conte√∫do. Por exemplo, a leitura de uma page de um arquivo regular, ou de um arquivo de dispositivo de bloco ou de uma √°rea de swap, deve ser realizada de diferentes maneiras, portanto o kernel deve selecionar a opera√ß√£o adequada dependendo do propriet√°rio da p√°gina. A unidade de informa√ß√£o mantida no page cache √©, obviamente, uma p√°gina inteira de dados.\numa p√°gina n√£o cont√©m necessariamente blocos de disco fisicamente adjacentes, portanto ela n√£o pode ser identificada por um n√∫mero de dispositivo e um n√∫mero de bloco. Em vez disso, uma p√°gina no Page Cache √© identificada por um propriet√°rio e por um √≠ndice nos dados do propriet√°rio ‚Äì geralmente, um inode e um offset dentro do arquivo correspondente. A estrutura de dados principal do Page Cache √© o objeto address_space, uma estrutura de dados incorporada no objeto inode propriet√°rio da page.\nMuitas pages no cache podem referir-se ao mesmo propriet√°rio, portanto, podem estar vinculadas ao mesmo objeto address_space que tamb√©m estabelece uma liga√ß√£o entre a pages do propriet√°rios e um conjunto de m√©todos que operam nessas pages. Aqui uma uma exce√ß√£o ocorre para p√°ginas que foram trocadas. Essas p√°ginas possuem um objeto address_space comum n√£o inclu√≠do em nenhum inode. Cada descritor de p√°gina inclui dois campos chamados mapping e index, que vinculam a page ao Page Cache\nO primeiro campo aponta para o objeto address_space do inode propriet√°rio da page. O segundo campo especifica o offset em unidades de page-size dentro do addres_space! Ou seja: a posi√ß√£o dos dados da page dentro do disk image propriet√°rio. Esses dois campos s√£o usados ao procurar uma p√°gina no cache de p√°ginas.\nMagit√©cnicamente, o cache de p√°ginas pode conter m√∫ltiplas c√≥pias dos mesmos dados do disco. Por exemplo, o mesmo bloco de dados de 4 KB de um arquivo normal pode ser acessado das seguintes maneiras:\nLendo o arquivo; os dados s√£o inclu√≠dos em uma page pertencente ao inode do arquivo normal. Lendo o bloco do arquivo do dispositivo (parti√ß√£o do disco) que hospeda o arquivo; os dados s√£o inclu√≠dos em uma page pertencente ao master inode do arquivo do dispositivo de bloco. Por isso, os dados de um disco aparecem em duas pages diferentes cada uma referenciada por um objeto address_space diferente\u0026hellip;\nAbaixo temos a tabela com os campos de um objeto adress_space\nType Field Description struct inode * host Pointer to the inode hosting this object, if any struct radix_tree_root page_tree Root of radix tree identifying the owner‚Äôs pages spinlock_t tree_lock Spin lock protecting the radix tree unsigned int i_mmap_writable Number of shared memory mappings in the address space struct prio_tree_root i_mmap Root of the radix priority search tree struct list_head i_mmap_nonlinear List of non-linear memory regions in the address space spinlock_t i_mmap_lock Spin lock protecting the radix priority search tree unsigned int truncate_count Sequence counter used when truncating the file unsigned long nrpages Total number of owner‚Äôs pages unsigned long writeback_index Page index of the last write-back operation on the owner‚Äôs pages struct address_space_ operations * a_ops Methods that operate on the owner‚Äôs pages unsigned long flags Error bits and memory allocator flag struct backing_dev_info * backing_dev_info Pointer to the backing_dev_info of the block device holding the data of this owner spinlock_t private_lock Usually, spin lock used when managing the private_list list struct list head private_list Usually, a list of dirty buffers of indirect blocks associated with the inode struct address_space * assoc_mapping Usually, pointer to the address_space object of the block device including the indirect blocks Se o owner de uma page no page cache for um arquivo, o objeto address_space ser√° inserido no campo i_data de um objeto VFS inode.\nO campo i_mapping do inode sempre aponta para o objeto address_space do propriet√°rio das pages que cont√™m os dados do inode. O campo host do objeto address_space aponta para o objeto inode no qual o descriptor est√° embutido\u0026hellip; Por isso, se uma page pertence a um arquivo armazenado em um sistema de arquivos Ext3,\no propriet√°rio da page √© o inode do arquivo e o objeto address_space correspondente √© armazenado no campo i_data do objeto VFS inode. O campo i_mapping do inode aponta para o campo i_data do mesmo inode, e o campo host do objeto address_space aponta para o mesmo inode\u0026hellip; Mas como sempre: A \u0026ldquo;treta\u0026rdquo; est√° sempre presente na TI\u0026hellip; :)\nSe uma page cont√©m dados, lidos de um arquivo de dispositivo de bloco(onde est√° o dado bruto(RAW)), o objeto address_space √© incorporado no master inode do arquivo no sistema de arquivos especial bdev associado ao dispositivo de bloco.\nPor isso, o campo i_mapping de um inode de um arquivo de dispositivo de bloco, aponta para o objeto address_space embutido no master inode da mesma forma, o campo host do objeto address_space aponta tamb√©m para o master idone dessa forma, todas as pages contendo dados lidos de um dispositivo de bloco possuem o mesmo objeto address_space, mesmo que tenham sido acessadas de arquivos de dispositivos de bloco diferentes Os campos i_mmap, i_mmap_writable, i_mmap_nonlinear e i_mmap_lock referem-se ao mapeamento de mem√≥ria e ao mapeamento reverso.\nO campo backing_dev_info aponta o descritor backing_dev_info associado ao dispositivo de bloco que armazena os dados do propriet√°rio.\na estrutura backing_dev_info geralmente √© incorporada no descritor da fila de solicita√ß√µes do dispositivo de bloco. O campo private_list √© o cabe√ßalho de uma lista gen√©rica que pode ser usada livremente pelo sistema de arquivos para seus prop√≥sitos espec√≠ficos.\nO Ext2 faz uso desse campo coletar os buffers sujos de blocos ‚Äúindiretos‚Äù associados ao inode. \u0026ldquo;buffers sujos\u0026rdquo; s√£o dados ainda n√£o escritos em disco. Quando uma opera√ß√£o for√ßa o inode a ser gravado em disco, o kernel tamb√©m libera todos os buffers nesta lista. Um campo crucial do objeto address_space √© a_ops.\nele aponta para uma tabela do tipo address_space_operations contendo os m√©todos que definem como as pages dos propriet√°rios s√£o tratadas. Os m√©todos mais importantes s√£o: readpage writepage prepare_write commit_write Os m√©todos vinculam os propriet√°rios do objetos inode aos drivers de baixo n√≠vel que acessam os dispositivos f√≠sicos.\nPor exemplo: a fun√ß√£o que implementa o m√©todo readpage para um inode de um arquivo regular, sabe localizar as posi√ß√µes no dispositivo de disco f√≠sico dos blocos correspondentes a cada page do arquivo\u0026hellip; Abaixo podemos ver a tabela de m√©todos do address_space\nMethod Description writepage Write operation (from the page to the owner‚Äôs disk image) readpage Read operation (from the owner‚Äôs disk image to the page) sync_page Start the I/O data transfer of already scheduled operations on owner‚Äôs pages writepages Write back to disk a given number of dirty owner‚Äôs pages set_page_dirty Set an owner‚Äôs page as dirty readpages Read a list of owner‚Äôs pages from disk prepare_write Prepare a write operation (used by disk-based filesystems) commit_write Complete a write operation (used by disk-based filesystems) bmap Get a logical block number from a file block index invalidatepage Invalidate owner‚Äôs pages (used when truncating the file) releasepage Used by journaling filesystems to prepare the release of a page direct_IO Direct I/O transfer of the owner‚Äôs pages (bypassing the page cache) [!NOTE] Referencias: Daniel P. Bovet, Marco Cesati - Understanding the Linux Kernel, Third Edition-O\u0026rsquo;Reilly Media | Page Descriptors - Cap 8, Block Device Drivers - Cap 14 , The Page Cache - Cap 15, Accessing Files - Cap 16 , Page Frame Reclaiming - Cap 17 , The Ext2 and Ext3 Filesystems - Cap 18.\nAt√© aqui j√° conseguimos entender que o mecanismo de cachear arquivos em mem√≥ria de forma transparente, independente de se estar mapeando algo em mem√≥ria, lendo ou escrevendo em disco, deixam as coisas um pouco mais complicadas para um administrador inexperiente ao tentar obter uma aferi√ß√£o de consumo de mem√≥ria\u0026hellip;\nPor isso, vamos tentar algumas abordagens para determinar valores mais pr√≥ximos do real para o consumo de mem√≥ria RAM.\nRSS e VSZ # Vamos come√ßar tendo como referencia o VSZ que √© o tamanho da mem√≥ria virtual que o Linux concedeu a um processo. Mas n√£o necessariamente o processo est√° usando o valor informado. Um dos motivos s√£o programas com fun√ß√µes para realizar determinadas tarefas, mas s√≥ as carregam na RAM, quando necess√°rio. Bem como tamb√©m a pagina√ß√£o por demanda do Linux, que s√≥ carrega p√°ginas na mem√≥ria quando o aplicativo tenta us√°-las\u0026hellip; Por isso a leitura que devemos fazer do valor √©: mem√≥ria se carregadas todas as suas fun√ß√µes e bibliotecas na mem√≥ria f√≠sica.\nJ√° RSS, √© o tamanho do conjunto residente. √â a quantidade de RAM que o processo no momento para carregar as suas p√°ginas. Ainda assim n√£o podemos tomar essa informa√ß√£o como concreta, devido as bibliotecas compartilhadas torna-se um valor impreciso por superestimativa\u0026hellip;\nPrimeiro criamos um processo em um novo cgroup\nRodamos o comanod mtr utilizando o systemd-run para isol√°-lo num cgroup(por que sim\u0026hellip;rs) systemd-run --user -P -t -G --wait mtr 8.8.8.8 Em seguida coletamos o seu PID e verificamos os valores de RSS e VSZ\nCom o comando ps coletamos seu PID e os dados de RSS e VSZ O PID do processo $ ps -aux |grep -E systemd-run.*mtr | grep -v grep |awk \u0026#39;{print $2}\u0026#39; 236341 E os dados de RSS e VSZ $ ps -o rss,vsz,cmd -p $(ps -aux |grep -E systemd-run.*mtr | grep -v grep |awk \u0026#39;{print $2}\u0026#39;) RSS VSZ CMD 7168 14940 systemd-run --user -P -t -G --wait mtr 8.8.8.8 S√≥ a t√≠tulo de cuiriosidade, segue algumas formas de coverter o valor para megabytes: $ echo $((7168/1024)) 7 ou $ echo $((7168/1024)) |xargs -i printf \u0026#34;%\u0026#39;.1f MB\u0026#34; {} 7.0 MB ou $ numfmt --from=si --to=iec 7168K 6.9M ou $ numfmt --from=si --to-unit=1Mi --grouping 7168K 7 Podemos ver que o processo est√° consumindo 7168 Kilobytes.\nEm seguida usamos o procfs para ter mais detalhes desse uso de RAM que o RSS est√° apontando.\nVamos ver o arquivo smaps_rollup que √© uma soma das √°reas de mem√≥ria do smaps do nosso PID $ cat /proc/236341/smaps_rollup 559517c38000-7ffe5c398000 ---p 00000000 00:00 0 [rollup] Rss: 7368 kB Pss: 1171 kB Pss_Dirty: 868 kB Pss_Anon: 868 kB Pss_File: 303 kB Pss_Shmem: 0 kB Shared_Clean: 6444 kB Shared_Dirty: 0 kB Private_Clean: 56 kB Private_Dirty: 868 kB Referenced: 7368 kB Anonymous: 868 kB LazyFree: 0 kB AnonHugePages: 0 kB ShmemPmdMapped: 0 kB FilePmdMapped: 0 kB Shared_Hugetlb: 0 kB Private_Hugetlb: 0 kB Swap: 0 kB SwapPss: 0 kB Locked: 0 kB Para as m√©tricas listadas RSS que j√° √© nossa conhecida. PSS Proportional Set Size √© o compartilhamento proporcional de mem√≥ria do processo. √â a contagem de p√°ginas que ele possui na mem√≥ria, onde cada p√°gina √© dividida pelo n√∫mero de processos que a compartilham. Portanto, se um processo tiver 1.000 p√°ginas s√≥ para ele e 1.000 compartilhadas com outro processo, seu PSS ser√° 1.500. Shared_Clean aqui vemos que nosso processo usa cache de p√°gina. E representa o maior uso da mem√≥ria. No arquivo smaps, conseguimos ver todas as bibliotecas compartilhadas que foram abertas com mmap() e residem no Page Cache. Shared_Dirty quando o processo grava em arquivos com mmap(), esta linha mostra a quantidade de mem√≥ria suja do cache de p√°gina ainda n√£o salva. Referenced √© a quantidade de mem√≥ria referenciada ou acessada at√© o momento. O valor √© sempre igual ou pr√≥ximo RSS. Anonymous mostra a quantidade de mem√≥ria que n√£o pertence a nenhum arquivo. At√© qui podemos ver que, embora o comando PS e Top nos mostre um RSS de 7MiB, a maior parte de seu RSS est√° oculto no cache de p√°gina e que quando ficarem inativas por um tempo, essas p√°ginas, ser√£o removidas da RAM pelo kernel.\nNesse artigo do LWN.net temos mais informa√ß√µes direto da fonte ;).\nContinua em breve\u0026hellip; # ","date":"15 November 2023","permalink":"/posts/pagecache/","section":"","summary":"RAM √© um hardware valioso e caro bem como a sua lat√™ncia √© ainda mais importante que a lat√™ncia do disco.","title":"Who Page Cache"},{"content":"","date":"6 November 2023","permalink":"/tags/aws/","section":"Tags","summary":"","title":"AWS"},{"content":"","date":"6 November 2023","permalink":"/tags/dok/","section":"Tags","summary":"","title":"DOK"},{"content":" IP DOK Set or Drop Sec Group AWS EC2 RDS # Fun√ß√£o # Scrip bash para descoberta de IPs de Droplets Nodes dos clusters Kubernetes e inser√ß√£o destes IPs, no security group EC2 das inst√¢ncias AWS RDS.\nAtualiza√ß√µes # 0.4v\nComo intev√°lo m√≠nimo de execu√ß√£o na CRON s√£o de 60 segundos! E eu precisava executar por mais vezes por minuto acabei contendo o scrip dentro de um la√ßo wile que o executa por 10 vezes com intervalo de 2 segundos 0.5v\nremovido la√ßo de x execu√ß√µes a cada 60s restruturado algumas conditional statement da inser√ß√£o e remo√ß√£o de IPs O diff, antes realizado globalmente, agora √© realizado para cada Security Group 0.6v\nimplementado o builtin set com as options errtrace, errexit, nounset e pipefail para deixar o script mais criterioso quanto a erros. Principalmente os de APIs 5xx sem a necessidade de fazer testes em fun√ß√µes, condi√ß√µes etc\u0026hellip; implementado trap para melhor localiza√ß√£o do momento e local do erro. 0.7v\nImplementado arquivo PID. Modificado m√©todo de cria√ß√£o de array\u0026rsquo;s espec√≠ficos para uso mapfile Melhorias no filtro diff dos arquivos de IPs Melhorias nos filtros para cria√ß√£o de array IPs Modificado no la√ßo aninhado de inser√ß√£o e remo√ß√£o de IP para melhora do parser 0.8v\nImplementado tratativa para cod error diff Implementado arquivo de diff tempor√°rio para cada sec. group verificado Implementado tratativa para cod error na cria√ß√£o de array usando arquivo diff tempor√°rio Implementado remo√ß√£o de arquivos tempor√°rios em cada la√ßo Depend√™ncias # AWS CLI\nAWS CLI EC2 API authorize-security-group-ingress API describe-security-groups RDS API describe-db-instances DigitalOcean CLI\nDO CLI API compute Reposit√≥rio script\nip-do_aws-rds.sh Executando # Crie diret√≥rio tools e tools/log em /usr/local\nmkdir -p /usr/local/tools/log \u0026amp;\u0026amp; cd /usr/local/tools/ \u0026amp;\u0026amp; \\ git clone git@github.com:0xttfx/ip-do_aws-rds.git \u0026amp;\u0026amp; cd ip-* N√£o h√° argumentos, bastando executar o .sh\n./script-0.8.sh Automa√ß√£o # Para automa√ß√£o da execu√ß√£o, adicione a seguinte linha na cron Devido ao update dos n√≥s dos clusters, que alteram os seus IPs, o script ser√° executado a cada 1 mintuo!\naltere conforme sua necessidade. * * * * * user\t/usr/bin/bash -x /usr/local/tools/ip-do_aws-rds/script-0.8.sh \u0026gt;\u0026gt; /usr/local/tools/log/exec-script-0.8-$(date --date=\u0026#34;today\u0026#34; +\\%d\\%m\\%Y_\\%H\\%M\\%S).log 2\u0026gt;\u0026amp;1 0 0 * * * user\tfind /usr/local/tools/log/ -type f -mtime +3 -name \u0026#39;exec-*.log\u0026#39; -exec rm {} + ","date":"6 November 2023","permalink":"/posts/ip-dok-awsrds/","section":"","summary":"DigitalOcean Kubernetes and AWS RDS Security Group","title":"IP DOK Set or Drop Sec Group AWS EC2 RDS"},{"content":"","date":"6 November 2023","permalink":"/tags/rds/","section":"Tags","summary":"","title":"RDS"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]